import sys
sys.path.append('..')
from core.imagemanager import dockermanager
from core.dependency import py_dependencymanager as dep

import pandas as pd
import matplotlib.pyplot as plt
import os
import shutil
import time


def check_dependencies(snippet_path):
    parsed = False
    snippet = os.path.basename(snippet_path)
    print('Checking dependency for: ',snippet)
    snippet_path_source = os.path.join('..','exploit_db_repo', snippet_path)
    path = os.path.join('..','images', snippet_path)
    if not(os.path.isdir(path)):
        os.makedirs(path)
        print("Directory '%s' created" %snippet)
    local_path = os.path.join(path, snippet)
    if not (os.path.exists(local_path)):
        shutil.copy(snippet_path_source, path)

    res = dep.run(local_path, path)

    #Check if dependency has been generated correctly
    parsed = False
    if(res['python']!=None):
        parsed = True
    return parsed

def test(file):
    result = '-1' #Exit code for: NOT PARSED 
    s_time = time.time()
    parsed = check_dependencies(file)
    if(parsed):
        path = os.path.join('..', 'images',file)
        result = dockermanager.test_exploit(path)
    f_time = str(time.time() - s_time)
    return pd.Series([result, f_time])

f = open('test_exploits_time.txt', 'w')
start_time = time.time()

#Read csv
df = pd.read_csv('python_exploits.csv')

#Add new column for exit_code
df[['exit_code','ex_time']] = df['file'].apply(test)

#Save edited dataset on new csv
df_test = df[['id', 'exit_code', 'ex_time']]
path_test_csv = os.path.join('results', 'exit_code.csv')
df_test.to_csv(path_test_csv, index=False)

percentage = (df_test['exit_code'].value_counts()/df_test['exit_code'].count())*100
print('Percentage of exit_codes: ')
print(percentage)
percentage.to_csv(os.path.join('results','exit_code_statistics.csv'))

f.write('Execution time: '+str(time.time()-start_time))
f.close

#Plot
fig = plt.figure()
ax = fig.add_subplot()
df_codes_count = df.exit_code.value_counts()
ax.pie(df_codes_count, labels=df_codes_count.index, autopct='%1.1f%%')
fig.savefig(os.path.join('results','exit_codes.png'))