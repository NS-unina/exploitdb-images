# TEST: run PyCRE for each python snippet

import os
import subprocess
import shutil
import pandas as pd

#py_snippets = open("py_snippets.txt", "r")

def check_dependencies(snippet_path):
    parsed = False
    snippet = os.path.basename(snippet_path)
    snippet_path = os.path.join("../exploitdb_repo/", snippet_path)
    parent_dir = "../exploits/"
    path = os.path.join(parent_dir, snippet)
    if not(os.path.isdir(path)):
        os.mkdir(path)
        print("Directory '%s' created" %snippet)
        shutil.copy(snippet_path, path)

    local_path = os.path.join(path, snippet)

    cmd = "python run.py "+ local_path + " "+ path + "/"
    subprocess.run(cmd, shell=True)

    #Check if DockerFile and requirements have been successfully generated
    count = 0
    for f in os.listdir(path):
        if os.path.isfile(os.path.join(path, f)):
            count += 1
    if(count==3):
        parsed = True
    
    return parsed


if not(os.path.isdir('../exploits')):
    os.mkdir('../exploits/')

df = pd.read_csv('python_exploits.csv')
df['parsed'] = df['file'].apply(check_dependencies)
df.to_csv('python_exploits.csv', index=False)

#Statistics on version frequency and percentage
plot = df.plot.pie(y='version', title="Parsed snippets", autopct='%1.1f%%', legend=False, shadow=True, startangle=0)

print("Done, check output in image folder and check csv")

#for riga in py_snippets:
#    py_snippets = open("py_snippets.txt", "r")
#
#    snippet_path = riga.strip()
#    snippet = os.path.basename(snippet_path) 
#    parent_dir = "../exploits/"
#    path = os.path.join(parent_dir, snippet)
#    if not(os.path.isdir(path)):
#        os.mkdir(path)
#        print("Directory '%s' created" %snippet)
#        shutil.copy(snippet_path, path)
#
#    local_path = os.path.join(path, snippet)
#
#    cmd = "python run.py "+ local_path + " "+ path + "/"
#    subprocess.run(cmd, shell=True)  
#
#    #Check if DockerFile and requirements have been successfully generated
#    count = 0
#    for f in os.listdir(path):
#        if os.path.isfile(os.path.join(path, f)):
#            count += 1
#    if(count==3):
#        parsed+=1
#    else:
#        not_parsed+=1



#After running PyCRE for each script, check how many folders are not empty (contains requirements.txt and Dockerfile) -----> INGLOBED IN FIRST FOR CYCLE
#for riga in py_snippets:
#    snippet_path = riga.strip()
#    snippet = os.path.basename(snippet_path)
#    parent_dir = "../exploits/"
#    count = 0
#    for f in os.listdir(path):
#       if os.path.isfile(os.path.join(path, f)):
#            count+=1
#    if(count==3):
#        parsed+=1
#    else:
#        not_parsed+=1
    


#parsed_percentage_results = open("parsed_percentage_results.txt", "w")
#
#perc_parsed = 100 * float(parsed)/float(parsed+not_parsed)
#perc_not_parsed = 100.0 - perc_parsed
#
#print("Total snippet parsed: " + str(parsed) + " Percentage: " + str(perc_parsed) + "%")
#parsed_percentage_results.write("Total snippet parsed: " + str(parsed) + " Percentage: " + str(perc_parsed) + "%" + "\n")
#print("Total snippet not parsed: "+ str(not_parsed) + " Percentage: " + str(perc_not_parsed) + "%")
#parsed_percentage_results.write("Total snippet not parsed: "+ str(not_parsed) + " Percentage: " + str(perc_not_parsed) + "%" + "\n")
#
#py_snippets.close()
#parsed_percentage_results.close()