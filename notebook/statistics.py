import os
import csv
from matplotlib import pyplot as plt
import numpy as np
from collections import Counter
import requests
import subprocess

languages = []
languages_wordpress = []
languages_txt = []

# Check language of exploits with txt extension
def get_language(exploit, description):
    master = "https://raw.githubusercontent.com/offensive-security/exploitdb/master/"+exploit
    response = requests.get(master)
    if(response.status_code == 200):
        exp = response.content
        f = open("exploit.txt", "w")
        f.write(str(exp))
        f.close()
        cmd = "file exploit.txt"
        result = subprocess.check_output(cmd, shell=True)
        languages.append(result)
        print(result)                                           #debug
        if("wordpress" in description.lower()):
            languages_wordpress.append(result)
            #TO DO: adapt txt result to others
    

with open('files_exploits.csv', encoding='utf-8', newline='') as f:
    lettore = csv.reader(f, delimiter=',')

    for riga in lettore:
        ext = riga[1].split(".")

        if len(ext)>1:                                             # first csv line omitted
            languages.append(ext[1])
            if(ext[1]=="txt"):                                     # txt extension -> check language (maybe too slow)
                get_language(riga[1], riga[2])
            elif ("wordpress" in riga[2].lower()):                 # WordPress exploits statistics
                languages_wordpress.append(ext[1])


#Global statistics and plot
lang = Counter(languages)
print(lang)

labels = []
sizes = []

for x, y in lang.items():
    labels.append(x)
    sizes.append(y)

plt.pie(sizes, labels=labels)

plt.axis('equal')
plt.show()

#WordPress statistics
wp_lang = Counter(languages_wordpress)
print(wp_lang)

labels = []
sizes = []

for x, y in wp_lang.items():
    labels.append(x)
    sizes.append(y)

plt.pie(sizes, labels=labels)

plt.axis('equal')
plt.show()