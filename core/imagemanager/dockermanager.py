import docker
import os
import logging
from core.utils import filemanager

client = docker.from_env()

def build_image(local_folder):
    print('Building image...')
    tag = os.path.basename(local_folder)+':py'
    client.images.build(
    path = local_folder,
    tag=tag,
    dockerfile = 'Dockerfile'
    )
    return tag

def run_container(tag):
    print('Running container...')
    container = client.containers.run(image=tag, detach=True)
    result = container.wait(condition='not-running')['StatusCode']
    run_logs = container.logs(stdout=True, stderr=True).decode().strip()
    print(run_logs)
    container.remove()
    return result

def test_exploit(local_folder):
    print('Testing exploit: ' + local_folder)
    docker_file_path = os.path.join(local_folder, 'Dockerfile')
    if(filemanager.file_exists(docker_file_path)):
        tag = build_image(local_folder)
        result = run_container(tag)
    else:
        logging.error('Dockerfile not found')
        result = 1
    logging.info('Test finished')
    return result