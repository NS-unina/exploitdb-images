from core.utils import filemanager as fm
from core.utils import downloadmanager as dm
from core.languages import lang
from core.dependency import py_dependencymanager as dep
from core.edb import edbmanager
from core.imagemanager import dockermanager
import logging

def generate_docker_image(exploit_code, timeout):
    try:
        exploit = edbmanager.get_exploit_info(exploit_code)
        local_path = exploit.get_local_path()
        local_folder = exploit.get_local_folder()

        if not fm.file_exists(local_path):
            fm.create_folder(local_folder)
            remote_path = exploit.get_remote_path()
            dm.download_file(remote_path, local_path)

        l = lang.get_language(local_path)
        exploit.language = l

        if(l == 'py'):
            print('Python exploit')
            dep.run(local_path, local_folder)
            dockermanager.test_exploit(local_folder, timeout)
        else:
            logging.error('Not a python parsable snippet')
    except Exception as error:
        print(error)
        #logging.error('Execution aborted')
        return