import os
import io
from core.utils import downloadmanager as dm
import pandas as pd
import requests
import logging

#EDB_MASTER = "https://raw.githubusercontent.com/offensive-security/exploitdb/master/"
EDB_MASTER = "https://gitlab.com/exploit-database/exploitdb/-/raw/main/"
#EDB_CSV_FILES = "https://raw.githubusercontent.com/offensive-security/exploitdb/master/files_exploits.csv"
EDB_CSV_FILES = "https://gitlab.com/exploit-database/exploitdb/-/raw/main/files_exploits.csv"

#Get exploit info from csv and return edb object
def get_exploit_info(exploit_code):
    response = requests.get(EDB_CSV_FILES)
    df = pd.read_csv(io.StringIO(response.text))
    snippet = df[df['id']==int(exploit_code)]
    try:
        snippet = snippet.iloc[0]
        edb_snippet = Edb(snippet.id, snippet.file, snippet.description, snippet.date_published, snippet.author, snippet.type, snippet.platform, '')
        return edb_snippet
    except:
        logging.error("Unknown exploit code")

class Edb:
    def __init__(self, id, file, description, date, author, the_type, platform, language):
        self.id = id
        self.file = file
        self.description = description
        self.date = date
        self.author = author
        self.the_type = the_type
        self.platform = platform
        self.language = language

    def get_remote_path(self):
        remote_path = os.path.join(EDB_MASTER, self.file)
        return remote_path

    def get_local_folder(self):
        local_folder = os.path.join("images", self.file)
        return local_folder

    def get_local_path(self):
        local_folder = self.get_local_folder()
        file = os.path.basename(self.file)
        local_path = os.path.join(local_folder, file)
        return local_path