import os
import io
from core.utils import downloadmanager as dm
import pandas as pd
import requests

EDB_MASTER = "https://raw.githubusercontent.com/offensive-security/exploitdb/master/"
EDB_CSV_FILES = "https://raw.githubusercontent.com/offensive-security/exploitdb/master/files_exploits.csv"

class Edb:
    def __init__(self, id, file, description, date, author, the_type, platform, language):
        self.id = id
        self.file = file
        self.description = description
        self.date = date
        self.author = author
        self.the_type = the_type
        self.platform = platform
        self.language = language


#Download exploit from github repository
def get_exploit(exploit_code):
    remote_path = get_remote_path(exploit_code)
    local_path = get_local_path(exploit_code)
    dm.download_exploit(remote_path, local_path)
    return

#Get exploit info from csv and return edb object
def get_exploit_info(exploit_path):
    return

def get_file_name(exploit_code):
    response = requests.get(EDB_CSV_FILES)
    df = pd.read_csv(io.StringIO(response.text))
    snippet = df[df['id']==int(exploit_code)]
    if not(snippet.empty):
        snippet = snippet.iloc[0]
        file = snippet['file']
    else:
        file = "empty"
    return file

def get_remote_path(exploit_code):
    file = get_file_name(exploit_code)
    if(file != 'empty'):
        remote_path = os.path.join(EDB_MASTER, file)
    else:
        remote_path = 'empty'
    return remote_path

def get_local_folder(exploit_code):
    file = get_file_name(exploit_code)
    if(file != 'empty'):
        local_folder = os.path.join("images", file)
    else:
        local_folder = 'empty'
    return local_folder

def get_local_path(exploit_code):
    file = get_file_name(exploit_code)
    if(file != 'empty'):
        local_folder = get_local_folder(exploit_code)
        file = os.path.basename(file)
        local_path = os.path.join(local_folder, file)
    else:
        local_path = 'empty'
    return local_path
